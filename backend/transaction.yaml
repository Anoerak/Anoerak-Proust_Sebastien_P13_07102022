openapi: 3.0.3
info:
    title: Bank Argent API documentation
    version: '1.0.0'
    description: |
        Contains all available API endpoints in this codebase for the edition of the user transactions.

        ### Check out its awesome features:

        * Get your transaction on a specific month üìÜ
        * Get details about a transaction üõç
        * Add / Edit / Delete a comment about a transaction ü§ë
    termsOfService: http://swagger.io/terms/
servers:
    - url: http://localhost:8080/api-docs/transactions
tags:
    - name: Account Module
      description: Access the accounts of a specific user.
      externalDocs:
          description: Find out more about users.
          url: http://swagger.io
    - name: Transactions Module
      description: Access to a user's transactions the last 30 days/ a specific month.
      externalDocs:
          description: Find out more about transactions.
          url: http://swagger.io
    - name: Comment Module
      description: Give access to user's comments about a specific transaction.

paths:
    /user/accounts:
        get:
            tags:
                - Account Module
            summary: get the accounts for a giving user
            description: get all the accounts of a giving user based on his id.
            operationId: getAccounts
            security:
                - Bearer: []
            parameters:
                - name: Authorization
                  in: header
                  description: JWT Bearer
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: The request succeeded.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccountsResponse'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/AccountsResponse'
                '400':
                    description: Bad Request
                '401':
                    description: Authenticate yourself and try again.
                '404':
                    description: The page you‚Äôre looking for doesn‚Äôt exist.
                '418':
                    description: I'm a teapot

    /user/{accountId}/transactions:
        get:
            tags:
                - Transactions Module
            summary: get the transactions for a giving user
            description: get the 30 latest days' transactions for a giving user, for a specific account
            operationId: getTransactions
            security:
                - Bearer: []
            parameters:
                - name: Authorization
                  in: header
                  description: JWT Bearer
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountId
                  schema:
                      type: string
                  required: true
                  description: id for the specific account
            responses:
                '200':
                    description: The request succeeded.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TransactionsResponse'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/TransactionsResponse'
                '400':
                    description: No datas for this account, check the value selected.
                '401':
                    description: Authenticate yourself and try again.
                '404':
                    description: The page you‚Äôre looking for doesn‚Äôt exist.
                '418':
                    description: I'm a teapot

    /user/{accountId}/transactions/{month}:
        get:
            tags:
                - Transactions Module
            summary: get the transactions for a giving user for a giving month
            description: get the transactions for a giving user for a giving month
            operationId: getTransactionsMonth
            security:
                - Bearer: []
            parameters:
                - name: Authorization
                  in: header
                  description: JWT Bearer
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountId
                  schema:
                      type: string
                  required: true
                  description: id for the specific account
                - in: path
                  name: month
                  schema:
                      type: integer
                  required: true
                  description: numeric format of the month required
            responses:
                '200':
                    description: The request succeeded.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TransactionsResponse'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/TransactionsResponse'
                '400':
                    description: No datas for this month, check the value selected.
                '401':
                    description: User authentification error. Authenticate yourself and try again.
                '404':
                    description: The page you‚Äôre looking for doesn‚Äôt exist.
                '418':
                    description: I'm a teapot

    /user/{accountId}/transaction/{transactionid}:
        get:
            tags:
                - Transactions Module
            summary: get a specific transaction and its details.
            description: get the details and edition options for a specific transaction.
            operationId: getTransactionId
            security:
                - Bearer: []
            parameters:
                - name: Authorization
                  in: header
                  description: JWT Bearer
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountId
                  schema:
                      type: string
                  required: true
                  description: id for the specific account
                - in: path
                  name: transactionid
                  schema:
                      type: string
                  required: true
                  description: transaction id
            responses:
                '200':
                    description: The request succeeded.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Transactions'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Transactions'
                '400':
                    description: No datas for this transaction, check the value selected.
                '401':
                    description: User authentification error. Authenticate yourself and try again.
                '404':
                    description: The page you‚Äôre looking for doesn‚Äôt exist.
                '418':
                    description: I'm a teapot

        post:
            tags:
                - Comment Module
            summary: create a category &/or a comment on a transaction.
            description: will create an object with a 'category' and a 'note'.
            operationId: postTransactionComment
            security:
                - Bearer: []
            parameters:
                - name: Authorization
                  in: header
                  description: JWT Bearer
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountId
                  schema:
                      type: string
                  required: true
                  description: id for the specific account
                - in: path
                  name: transactionid
                  schema:
                      type: string
                  required: true
                  description: transaction id
            requestBody:
                description: add a category and a comment on a specific transaction.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Comment'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Comment'
            responses:
                '200':
                    description: The request succeeded.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommentResponse'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/CommentResponse'
                '400':
                    description: Invalid Fields, check your inputs.
                '401':
                    description: User authentification error. Authenticate yourself and try again.
                '404':
                    description: The page you‚Äôre looking for doesn‚Äôt exist.
                '418':
                    description: I'm a teapot

        put:
            tags:
                - Comment Module
            summary: change a category &/or a comment on a transaction.
            description: will create an object with a 'category' and a 'note' to replace previous value.
            operationId: putTransactionComment
            security:
                - Bearer: []
            parameters:
                - name: Authorization
                  in: header
                  description: JWT Bearer
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountId
                  schema:
                      type: string
                  required: true
                  description: id for the specific account
                - in: path
                  name: transactionid
                  schema:
                      type: string
                  required: true
                  description: transaction id
            requestBody:
                description: will modify a category and/or a comment on a specific transaction.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Comment'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Comment'
            responses:
                '200':
                    description: The request succeeded.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommentResponse'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/CommentResponse'
                '400':
                    description: Invalid Fields, check your inputs.
                '401':
                    description: User authentification error. Authenticate yourself and try again.
                '404':
                    description: The page you‚Äôre looking for doesn‚Äôt exist.
                '418':
                    description: I'm a teapot

    /user/{accountId}/transaction/{id}/{commentid}:
        delete:
            tags:
                - Comment Module
            summary: delete a category &/or a comment on a transaction.
            description: will create an object with a 'category' and a 'note'.
            operationId: deleteTransactionComment
            security:
                - Bearer: []
            parameters:
                - name: Authorization
                  in: header
                  description: JWT Bearer
                  required: true
                  schema:
                      type: string
                - in: path
                  name: accountId
                  schema:
                      type: string
                  required: true
                  description: id for the specific account
                - in: path
                  name: id
                  schema:
                      type: string
                  required: true
                  description: transaction id
                - in: path
                  name: commentid
                  schema:
                      type: string
                  required: true
                  description: comment or category id
            responses:
                '200':
                    description: The request succeeded.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommentDeletedResponse'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/CommentDeletedResponse'
                '400':
                    description: Invalid Fields, check your inputs.
                '401':
                    description: User authentification error. Authenticate yourself and try again.
                '404':
                    description: The page you‚Äôre looking for doesn‚Äôt exist.
                '418':
                    description: I'm a teapot

components:
    securitySchemes:
        Bearer:
            type: apiKey
            name: Authorization
            in: header

    schemas:
        Account:
            type: object
            properties:
                accountId:
                    type: string
                    example: kVK2VV2kC2Kk4R4F
                accountName:
                    type: string
                    example: khcv6v√®i76TghjHTAA
                accountBalance:
                    type: integer
                    format: int64
                    example: 2345.43
            xml:
                name: account

        Accounts:
            type: array
            items:
                $ref: '#/components/schemas/Account'

        Transaction:
            type: object
            properties:
                transactionId:
                    type: string
                    example: fqsf23fdqez324
                accountId:
                    type: string
                    example: fqrqQ4TQT4YU66
                transactionDate:
                    type: integer
                    format: int64
                    example: 1519211809934
                transactionDescription:
                    type: string
                    example: this is a description
                transactionAmount:
                    type: integer
                    format: int64
                    example: 125.12
                items:
                    $ref: '#/components/schemas/Comment'
            xml:
                name: transaction

        Transactions:
            type: array
            items:
                $ref: '#/components/schemas/Transaction'

        Comment:
            type: object
            properties:
                transactionCategory:
                    type: object
                    properties:
                        categoryId:
                            type: string
                            example: fqREQST3354GFqgr
                        categoryValue:
                            type: string
                            example: one Category
                            description: 'if empty, will return the actual value. Has to be equal to one the the value in the dropdown.'
                transactionNote:
                    type: object
                    properties:
                        noteId:
                            type: string
                            example: FQZ4tzse335Y5gq
                        noteValue:
                            type: string
                            example: here is a comment
                            description: if empty, will return the actual value.
            required:
                - transactionCategory
                - transactionNote
            xml:
                name: comment

        AccountsResponse:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                message:
                    type: string
                body:
                    type: object
                    properties:
                        items:
                            $ref: '#/components/schemas/Accounts'

        TransactionsResponse:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                message:
                    type: string
                body:
                    type: object
                    properties:
                        items:
                            $ref: '#/components/schemas/Transactions'

        CommentResponse:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                message:
                    type: string
                body:
                    type: object
                    properties:
                        items:
                            $ref: '#/components/schemas/Transaction'

        CommentDeletedResponse:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                message:
                    type: string
                    example: comment 'id' / category 'id' has been deleted successfully
